{"ast":null,"code":"import { collectionData, docData, doc } from '@angular/fire/firestore';\nimport { collection } from '@firebase/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class DataService {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.name = '';\n  }\n  getUser() {\n    const userRef = collection(this.firestore, this.name);\n    return collectionData(userRef, {\n      idField: 'id'\n    });\n  }\n  getUserById(id) {\n    const userDocRef = doc(this.firestore, this.name += '/${id}');\n    return docData(userDocRef, {\n      idField: 'id'\n    });\n  }\n  /*\n  addUser(user: User) {\n      const userRef = collection(this.firestore, 'user8792009665');\n      return addDoc(userRef, user);\n  }\n   deleteUser(user: User) {\n      const userDocRef = doc(this.firestore, 'user8792009665/${user8792009665.id');\n      return deleteDoc(userDocRef);\n  }\n   updateUser(user: User) {\n      const userDocRef = doc(this.firestore, 'user8792009665/${user8792009665.id}');\n      return updateDoc(userDocRef, { date: user.date, TotalSteps: user.TotalSteps, TotalDistance: user.TotalDistance, TrackerDistance: user.TrackerDistance, LoggedActivitiesDistance: user.LoggedActivitiesDistance, VeryActiveDistance_x: user.VeryActiveDistance_x, ModeratelyActiveDistance_x: user.ModeratelyActiveDistance_x, LightActiveDistance_x: user.LightActiveDistance_x, SedentaryActiveDistance_x: user.SedentaryActiveDistance_x, VeryActiveMinutes_x: user.VeryActiveMinutes_x, Calories_x: user.Calories_x, Calories_y: user.Calories_y, SedentaryMinutes_y: user.SedentaryMinutes_y, LightlyActiveMinutes_y: user.LightlyActiveMinutes_y, FairlyActiveMinutes_y: user.FairlyActiveMinutes_y, VeryActiveMinutes_y: user.VeryActiveMinutes_y, SedentaryActiveDistance_y: user.SedentaryActiveDistance_y, LightActiveDistance_y: user.LightActiveDistance_y, ModeratelyActiveDistance_y: user.ModeratelyActiveDistance_y, VeryActiveDistance_y: user.VeryActiveDistance_y, StepTotal: user.StepTotal, TotalSleepRecords: user.TotalSleepRecords, TotalMinutesAsleep: user.TotalMinutesAsleep, TotalTimeInBed: user.TotalTimeInBed  });\n  }*/\n  setID(id) {\n    this.name = \"user\" + id;\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.Firestore));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,cAAc,EAAEC,OAAO,EAAqBC,GAAG,QAAmB,yBAAyB;AAC/G,SAASC,UAAU,QAAQ,qBAAqB;;;AAmChD,OAAM,MAAOC,WAAW;EAGpBC,YAAoBC,SAAoB;IAApB,cAAS,GAATA,SAAS;IAF7B,SAAI,GAAU,EAAE;EAGhB;EAEAC,OAAO;IACH,MAAMC,OAAO,GAAGL,UAAU,CAAC,IAAI,CAACG,SAAS,EAAE,IAAI,CAACG,IAAI,CAAC;IACrD,OAAOT,cAAc,CAACQ,OAAO,EAAE;MAAEE,OAAO,EAAE;IAAI,CAAC,CAAuB;EAC1E;EAEAC,WAAW,CAACC,EAAQ;IAChB,MAAMC,UAAU,GAAGX,GAAG,CAAC,IAAI,CAACI,SAAS,EAAG,IAAI,CAACG,IAAI,IAAI,QAAQ,CAAC;IAC9D,OAAOR,OAAO,CAACY,UAAU,EAAE;MAAEH,OAAO,EAAE;IAAI,CAAE,CAAqB;EACrE;EAEA;;;;;;;;;;;;;EAgBAI,KAAK,CAACF,EAAO;IACT,IAAI,CAACH,IAAI,GAAG,MAAM,GAAGG,EAAE;EAC3B;;;mBAlCSR,WAAW;AAAA;;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFR;AAAM","names":["collectionData","docData","doc","collection","DataService","constructor","firestore","getUser","userRef","name","idField","getUserById","id","userDocRef","setID","factory","providedIn"],"sourceRoot":"","sources":["/Users/katherinethai/Desktop/sleepwatch/src/app/services/data.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Firestore, collectionData, docData, addDoc, deleteDoc, doc, updateDoc } from '@angular/fire/firestore';\nimport { collection } from '@firebase/firestore';\nimport { Observable } from 'rxjs';\nimport { Tab1Page } from '../tab1/tab1.page';\n\nexport interface User{\n    id?: string;\n    date: string;\n    TotalSteps: string;\n    TotalDistance: string;\n    TrackerDistance: string;\n    LoggedActivitiesDistance: string;\n    VeryActiveDistance_x: string;\n    ModeratelyActiveDistance_x: string;\n    LightActiveDistance_x: string;\n    SedentaryActiveDistance_x: string;\n    VeryActiveMinutes_x: string;\n    Calories_x: string;\n    Calories_y: string;\n    SedentaryMinutes_y: string;\n    LightlyActiveMinutes_y: string;\n    FairlyActiveMinutes_y: string;\n    VeryActiveMinutes_y: string;\n    SedentaryActiveDistance_y: string;\n    LightActiveDistance_y: string;\n    ModeratelyActiveDistance_y: string;\n    VeryActiveDistance_y: string;\n    StepTotal: string;\n    TotalSleepRecords: string;\n    TotalMinutesAsleep: string;\n    TotalTimeInBed: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n    name:string = '';\n\n    constructor(private firestore: Firestore) {\n    }\n\n    getUser(): Observable<User[]>{ \n        const userRef = collection(this.firestore, this.name);\n        return collectionData(userRef, { idField: 'id'}) as Observable<User[]>; \n    }\n\n    getUserById(id: User): Observable<User> {\n        const userDocRef = doc(this.firestore,  this.name += '/${id}');\n        return docData(userDocRef, { idField: 'id' }) as Observable<User>;\n    }\n\n    /*\n    addUser(user: User) {\n        const userRef = collection(this.firestore, 'user8792009665');\n        return addDoc(userRef, user);\n    }\n\n    deleteUser(user: User) {\n        const userDocRef = doc(this.firestore, 'user8792009665/${user8792009665.id');\n        return deleteDoc(userDocRef);\n    }\n\n    updateUser(user: User) {\n        const userDocRef = doc(this.firestore, 'user8792009665/${user8792009665.id}');\n        return updateDoc(userDocRef, { date: user.date, TotalSteps: user.TotalSteps, TotalDistance: user.TotalDistance, TrackerDistance: user.TrackerDistance, LoggedActivitiesDistance: user.LoggedActivitiesDistance, VeryActiveDistance_x: user.VeryActiveDistance_x, ModeratelyActiveDistance_x: user.ModeratelyActiveDistance_x, LightActiveDistance_x: user.LightActiveDistance_x, SedentaryActiveDistance_x: user.SedentaryActiveDistance_x, VeryActiveMinutes_x: user.VeryActiveMinutes_x, Calories_x: user.Calories_x, Calories_y: user.Calories_y, SedentaryMinutes_y: user.SedentaryMinutes_y, LightlyActiveMinutes_y: user.LightlyActiveMinutes_y, FairlyActiveMinutes_y: user.FairlyActiveMinutes_y, VeryActiveMinutes_y: user.VeryActiveMinutes_y, SedentaryActiveDistance_y: user.SedentaryActiveDistance_y, LightActiveDistance_y: user.LightActiveDistance_y, ModeratelyActiveDistance_y: user.ModeratelyActiveDistance_y, VeryActiveDistance_y: user.VeryActiveDistance_y, StepTotal: user.StepTotal, TotalSleepRecords: user.TotalSleepRecords, TotalMinutesAsleep: user.TotalMinutesAsleep, TotalTimeInBed: user.TotalTimeInBed  });\n    }*/\n\n    setID(id: any) {\n        this.name = \"user\" + id;\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}